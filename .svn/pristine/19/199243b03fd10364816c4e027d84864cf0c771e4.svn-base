"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var menu_service_1 = require("./menu.service");
var MenusComponent = (function () {
    function MenusComponent(menuService, router) {
        this.menuService = menuService;
        this.router = router;
        this.title = '生命守护';
        this.menu = {
            id: 1,
            name: "帮助中心"
        };
    }
    ;
    MenusComponent.prototype.onSelect = function (menu) {
        this.selectedMenu = menu;
    };
    ;
    MenusComponent.prototype.getMenus = function () {
        var _this = this;
        this.menuService.getMenus().then(function (menus) { return _this.menus = menus; });
    };
    ;
    MenusComponent.prototype.ngOnInit = function () {
        this.getMenus();
    };
    ;
    MenusComponent.prototype.gotoDetail = function () {
        this.router.navigate(['/detail', this.selectedMenu.id]);
    };
    ;
    MenusComponent.prototype.add = function (name) {
        var _this = this;
        name = name.trim();
        if (!name) {
            return;
        }
        this.menuService.create(name)
            .then(function (menu) {
            _this.menus.push(menu);
            _this.selectedMenu = null;
        });
    };
    ;
    MenusComponent.prototype.delete = function (menu) {
        var _this = this;
        this.menuService
            .delete(menu.id)
            .then(function () {
            _this.menus = _this.menus.filter(function (h) { return h !== menu; });
            if (_this.selectedMenu === menu) {
                _this.selectedMenu = null;
            }
        });
    };
    ;
    return MenusComponent;
}());
MenusComponent = __decorate([
    core_1.Component({
        selector: 'my-menus',
        templateUrl: './menus.component.html',
        styleUrls: ['./menus.component.css']
    }),
    __metadata("design:paramtypes", [menu_service_1.MenuService, router_1.Router])
], MenusComponent);
exports.MenusComponent = MenusComponent;
//# sourceMappingURL=menus.component.js.map