<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
    ">
    <import resource="classpath:mybatis/spring-mybatis.xml"/>
    <import resource="classpath:spring/lifedf-component.xml"/>
    <!-- shiro start -->

    <!-- 密码加密处理 -->
    <bean id="passwordHelper" class="com.lifeshs.utils.PasswordUtil">
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="com.lifeshs.security.credentials.CustomSimpleCredentialsMatcher">
        <constructor-arg>
            <bean class="org.apache.shiro.cache.ehcache.EhCacheManager">
                <property name="cacheManager" ref="ehCacheManager"/>
            </bean>
        </constructor-arg>
        <property name="passwordHelper" ref="passwordHelper"/>
    </bean>


    <!--<bean id="shiro_user_dao" class="com.lifeshs.security.dao.UserDAO">-->
        <!--<property name="jt" ref="jdbcTemplate"/>-->
    <!--</bean>-->
    <!-- Realm实现 -->
    <bean id="userRealm" class="com.lifeshs.security.realm.UserRealm">
        <!--<property name="userDAO" ref="shiro_user_dao"/>-->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!--密码校验接口 -->
        <property name="cacheManager">
            <bean class="org.apache.shiro.cache.ehcache.EhCacheManager">
                <property name="cacheManager" ref="ehCacheManager"/>
            </bean>
        </property>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="false"/>
        <!-- <property name="authenticationCacheName" value="authenticationCache" />  -->
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator"
          class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 180000 -->
        <!-- 30天 -->
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 2592000 -->
        <!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO"
          class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/><!-- 1800000
			：30分钟 --> <!-- 450000 -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager">
            <bean class="org.apache.shiro.cache.ehcache.EhCacheManager">
                <property name="cacheManager" ref="ehCacheManager"/>
            </bean>
        </property>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean
            class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!--这个loginUrl有两个必要条件,一个登陆校验失败以后会强制客户端redirect到这个url， 另外一个是登陆的表单(含有用户名及密码)必须action到这个url -->
    <!-- 自定义的能够接收校验码的身份验证过滤器 <bean id="formAuthenticationFilter" class="com.shinowit.framework.security.filter.ValidFormAuthenticationFilter">
        <property name="usernameParam" value="loginName"/> <property name="passwordParam"
        value="loginPass"/> <property name="loginUrl" value="/login/"/> </bean> -->

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/my/home"/>
        <property name="unauthorizedUrl" value="/login/error"/>
        <property name="filters">
            <map>
                <entry key="authc">
                    <!-- <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/> -->
                    <bean class="com.lifeshs.security.shiro.PassThruFilter"/>
                </entry>
                <!--<entry key="permission">
                    <bean class="com.lifeshs.security.shiro.RoleAuthorizationFilter">
                    </bean>
                </entry>-->
            </map>
        </property>
        <!--用于设置权限过滤规则，anon为匿名访问，无权限不做跳转-->
        <property name="filterChainDefinitions">
            <value>
                / = anon
                /static/** = anon
                /commonControl**/** = anon
                <!-- 				/static/** = anon
                                /upload/** = anon
                                /view/login/** = anon -->
                /code.do = anon
                /login/** = anon
                /register/** = anon
                /pass/** = anon
                <!-- /favicon.ico = anon -->
                /randCodeImage.do = anon
                /releaseControl.do = anon
                /testController.do = anon
                /test/** = anon
                /memberControl.do = anon
                /orgUserControl.do = anon
                /orgControl.do = anon
                /zdPushDataController.do = anon
                /HL03Control.do = anon
                /app/** = anon
                /appweb.do = anon
                /mapp/** = anon
                /healthController.do = anon
                /indexControl.do = anon
                /informationControl.do = anon
                /oauthLoginControl.do = anon
                /** = authc

               <!-- /**=permission-->
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--&lt;!&ndash; shiro end &ndash;&gt;-->
    <!--<bean class="com.lifeshs.service.tool.impl.ValidCodeUtil"/>-->
    <!--<bean id="chainDefinitionSectionMetaSource" class="com.lifeshs.security.filter.ChainDefinitionSectionMetaSource">
        <property name="filterChainDefinitions">
            <value>

            </value>
        </property>
    </bean>-->
</beans>