<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>lifeshs.web.business</display-name>
    <context-param>
        <param-name>defaultHtmlEscape</param-name>
        <param-value>true</param-value>
    </context-param>
    <!-- 加载配置信息 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring-mvc.xml;classpath:spring/applicationContext.xml
        </param-value>
    </context-param>
    <!-- log4j -->
    <!--由载入的Log4j配置文件位置-->
    <context-param>
        <param-name>log4jOutputEnvKey</param-name>
        <param-value>lifedefender_web_customer_log</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigEnvKey</param-name>
        <param-value>lifedefender_web_customer_config</param-value>
    </context-param>

    <context-param>
        <param-name>log4jFileName</param-name>
        <param-value>log4j.properties</param-value>
    </context-param>

    <!--Spring默认刷新Log4j配置文件的间隔,每分钟扫描一次log配置文件，单位为millisecond -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <!-- Web 项目 Spring 加载 Log4j 的监听 -->
    <listener>
        <listener-class>com.lifeshs.common.web.utils.Log4jConfigListener</listener-class>
    </listener>
    <!-- ehcache持久化监听tomcat关闭 -->
    <listener>
        <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>
    </listener>

    <!-- 字符集过滤 -->
    <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--xss filter start-->
    <filter>
        <filter-name>XssSqlFilter</filter-name>
        <filter-class>com.lifeshs.security.filter.XssFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>XssSqlFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--xss filter end-->
    <!-- druid Web Filter start -->
    <filter>
        <filter-name>druidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>/css/*,/context/*,/static/*,*.js,*.css,*/druid*,*.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>principalSessionName</param-name>
            <param-value>sessionInfo</param-value>
        </init-param>
        <init-param>
            <param-name>profileEnable</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>druidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- druid Web Filter end -->

    <!-- 加载spring -->
    <listener>
        <description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener
        </listener-class>
    </listener>
    <!-- sys init  start-->
    <!--<listener>
        <description>系统初始化监听器</description>
        <listener-class>com.lifeshs.support.plantform.listener.InitListener</listener-class>
    </listener>-->
    <!-- sys init end -->
    <!-- 加载spring mvc -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <url-pattern>/</url-pattern><!--<url-pattern>/</url-pattern>使用的是/，而不是/*,如果使用/*,那么请求时可以通过DispatcherServlet转发到相应的Action或者Controller中的，但是返回的内容，如返回的jsp还会再次被拦截，这样导致404错误，即访问不到jsp。-->
    </servlet-mapping>

    <!-- alibaba druid start-->
    <!--<servlet>
        <servlet-name>druidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
        <init-param>
            &lt;!&ndash; 允许清空统计数据 &ndash;&gt;
            <param-name>resetEnable</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            &lt;!&ndash; 用户名 &ndash;&gt;
            <param-name>loginUsername</param-name>
            <param-value>druid</param-value>
        </init-param>
        <init-param>
            &lt;!&ndash; 密码 &ndash;&gt;
            <param-name>loginPassword</param-name>
            <param-value>tz@druid123!@#</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>druidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>-->
    <!-- alibaba druid end-->

    <!-- restUrl风格配置 start-->
    <servlet>
        <servlet-name>restSpringMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>restSpringMvc</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    <!-- restUrl风格配置 end -->


    <!-- 参数设置  start 取消参数拦截器 2016-05-04
    <filter>
        <filter-name>paraFilter</filter-name>
        <filter-class>com.lifeshs.interceptors.ParaFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>paraFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
     参数设置 end -->

    <!-- Shiro filter start -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Shiro filter end -->

    <!-- start 添加验证码 -->
    <!--servlet>
        <servlet-name>RandCodeImage</servlet-name>
        <servlet-class>com.lifeshs.servlet.RandCodeImageServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>RandCodeImage</servlet-name>
        <url-pattern>/randCodeImage.do</url-pattern>
    </servlet-mapping>-->
    <!-- end 添加验证码 -->
    <!--<error-page>
        <error-code>403</error-code>
        <location>/view/common/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/view/common/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/view/common/500.jsp</location>
    </error-page>-->
    <welcome-file-list>
        <!-- <welcome-file>view/login/login.jsp</welcome-file> -->
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>